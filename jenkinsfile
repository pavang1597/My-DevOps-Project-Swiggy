pipeline {
    agent any
    tools {
        jdk 'jdk17'
        maven 'maven' // Use Maven instead of nodejs
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git 'https://github.com/pavang1597/My-DevOps-Project-Swiggy.git'
            }
        }
        stage("SonarQube Analysis") {
            steps {
                withSonarQubeEnv('sonar-server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Swiggy \
                    -Dsonar.projectKey=Swiggy'''
                }
            }
        }
        stage("Quality Gate") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    def nodeHome = tool name: 'NodeJS', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
                    env.PATH = "${nodeHome}/bin:${env.PATH}"
                    sh "npm install"
                }
            }
        }
        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("Docker Build & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-creds', toolName: 'docker') {   
                        sh "docker build -t swiggy ."
                        sh "docker tag swiggy pavan363/swiggy:latest"
                        sh "docker push pavan363/swiggy:latest"
                    }
                }
            }
        }
        stage("TRIVY") {
            steps {
                sh "trivy image pavan363/swiggy:latest > trivy.txt"
            }
        }
        stage('Deploy to Container') {
            steps {
                sh 'docker run -d --name swiggy -p 3000:3000 pavan363/swiggy:latest'
            }
        }
    }
}
